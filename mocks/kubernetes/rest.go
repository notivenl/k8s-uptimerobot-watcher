// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"github.com/notivenl/uptime-kubernetes/pkg/ports/kubernetes"
	"sync"
)

// Ensure, that RestMock does implement kubernetes.Rest.
// If this is not the case, regenerate this file with moq.
var _ kubernetes.Rest = &RestMock{}

// RestMock is a mock implementation of kubernetes.Rest.
//
// 	func TestSomethingThatUsesRest(t *testing.T) {
//
// 		// make and configure a mocked kubernetes.Rest
// 		mockedRest := &RestMock{
// 			GetInternalClientFunc: func() (kubernetes.Kubernetes, error) {
// 				panic("mock out the GetInternalClient method")
// 			},
// 		}
//
// 		// use mockedRest in code that requires kubernetes.Rest
// 		// and then make assertions.
//
// 	}
type RestMock struct {
	// GetInternalClientFunc mocks the GetInternalClient method.
	GetInternalClientFunc func() (kubernetes.Kubernetes, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetInternalClient holds details about calls to the GetInternalClient method.
		GetInternalClient []struct {
		}
	}
	lockGetInternalClient sync.RWMutex
}

// GetInternalClient calls GetInternalClientFunc.
func (mock *RestMock) GetInternalClient() (kubernetes.Kubernetes, error) {
	if mock.GetInternalClientFunc == nil {
		panic("RestMock.GetInternalClientFunc: method is nil but Rest.GetInternalClient was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGetInternalClient.Lock()
	mock.calls.GetInternalClient = append(mock.calls.GetInternalClient, callInfo)
	mock.lockGetInternalClient.Unlock()
	return mock.GetInternalClientFunc()
}

// GetInternalClientCalls gets all the calls that were made to GetInternalClient.
// Check the length with:
//     len(mockedRest.GetInternalClientCalls())
func (mock *RestMock) GetInternalClientCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGetInternalClient.RLock()
	calls = mock.calls.GetInternalClient
	mock.lockGetInternalClient.RUnlock()
	return calls
}
